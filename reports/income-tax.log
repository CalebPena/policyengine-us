Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/jupyter_cache/executors/utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/asyncio/base_events.py", line 587, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/nbclient/client.py", line 664, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from openfisca_us import IndividualSim
import pandas as pd
import plotly.express as px


def make_tax(adults, children):
    sim = IndividualSim(year=2022)
    sim.add_person(name="head", age=25, rent=12_000)
    members = ["head"]
    if adults == 2:
        sim.add_person(name="spouse")
        members += ["spouse"]
    for i in range(children):
        child = "child{}".format(i)
        sim.add_person(name=child, age=6)
        members += [child]
    sim.add_tax_unit(name="tax_unit", members=members)
    sim.add_spm_unit(name="spm_unit", members=members)
    sim.add_household(name="household", members=members, state_code="MA")
    sim.vary("employment_income", max=100_000, step=100)
    return pd.DataFrame(
        dict(
            employment_income=sim.calc("employment_income")[0],
            state_income_tax=sim.calc("state_income_tax")[0].round(),
            state_eitc=sim.calc("state_eitc")[0].round(),
            state_limited_income_tax_credit=sim.calc(
                "state_limited_income_tax_credit"
            )[0].round(),
            mtr=sim.deriv(
                "state_income_tax", "employment_income", wrt_target="head"
            ),
            adults=adults,
            children=children,
        )
    )


# Make a table of state taxes for different numbers of adults and children.
l = []
for adults in range(1, 3):
    for children in range(0, 4):
        l.append(make_tax(adults, children))

df = pd.concat(l)

LABELS = dict(
    employment_income="Employment income",
    state_income_tax="Massachusetts income tax",
    mtr="State marginal tax rate",
    adults="Adults",
    children="Children",
    state_eitc="Massachusetts EITC",
    state_limited_income_tax_credit="Massachusetts Limited Income Credit",
)

fig = px.line(
    df,
    "employment_income",
    "state_income_tax",
    color="children",
    animation_frame="adults",
    labels=LABELS,
    title="Massachusetts income tax",
)
fig.update_layout(xaxis_tickformat="$,", yaxis_tickformat="$,")
fig.show()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mKeyError[0m                                  Traceback (most recent call last)
[0;32m/tmp/ipykernel_2206/2734893814.py[0m in [0;36m<module>[0;34m[0m
[1;32m     40[0m [0;32mfor[0m [0madults[0m [0;32min[0m [0mrange[0m[0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m3[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     41[0m     [0;32mfor[0m [0mchildren[0m [0;32min[0m [0mrange[0m[0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m4[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 42[0;31m         [0ml[0m[0;34m.[0m[0mappend[0m[0;34m([0m[0mmake_tax[0m[0;34m([0m[0madults[0m[0;34m,[0m [0mchildren[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     43[0m [0;34m[0m[0m
[1;32m     44[0m [0mdf[0m [0;34m=[0m [0mpd[0m[0;34m.[0m[0mconcat[0m[0;34m([0m[0ml[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/tmp/ipykernel_2206/2734893814.py[0m in [0;36mmake_tax[0;34m(adults, children)[0m
[1;32m     23[0m             [0memployment_income[0m[0;34m=[0m[0msim[0m[0;34m.[0m[0mcalc[0m[0;34m([0m[0;34m"employment_income"[0m[0;34m)[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m     24[0m             [0mstate_income_tax[0m[0;34m=[0m[0msim[0m[0;34m.[0m[0mcalc[0m[0;34m([0m[0;34m"state_income_tax"[0m[0;34m)[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m.[0m[0mround[0m[0;34m([0m[0;34m)[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 25[0;31m             [0mstate_eitc[0m[0;34m=[0m[0msim[0m[0;34m.[0m[0mcalc[0m[0;34m([0m[0;34m"state_eitc"[0m[0;34m)[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m.[0m[0mround[0m[0;34m([0m[0;34m)[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     26[0m             state_limited_income_tax_credit=sim.calc(
[1;32m     27[0m                 [0;34m"state_limited_income_tax_credit"[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/openfisca_tools/hypothetical.py[0m in [0;36mcalc[0;34m(self, var, period, target, index, map_to, reform)[0m
[1;32m    277[0m [0;34m[0m[0m
[1;32m    278[0m         [0mperiod[0m [0;34m=[0m [0mperiod[0m [0;32mor[0m [0mself[0m[0;34m.[0m[0myear[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 279[0;31m         [0mentity[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0msystem[0m[0;34m.[0m[0mvariables[0m[0;34m[[0m[0mvar[0m[0;34m][0m[0;34m.[0m[0mentity[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    280[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    281[0m             [0mresult[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0msimulation[0m[0;34m.[0m[0mcalculate[0m[0;34m([0m[0mvar[0m[0;34m,[0m [0mperiod[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;31mKeyError[0m: 'state_eitc'
KeyError: 'state_eitc'

