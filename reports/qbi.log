Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/jupyter_cache/executors/utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/asyncio/base_events.py", line 587, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/nbclient/client.py", line 664, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from openfisca_core.simulation_builder import SimulationBuilder
from openfisca_us import CountryTaxBenefitSystem

WITH_AXES = {
    "people": {
        "person": {"age": {"2022": 18}},
    },
    "tax_units": {
        "tax_unit": {
            "members": ["person"],
        }
    },
    "spm_units": {
        "spm_unit": {
            "members": ["person"],
        }
    },
    "households": {
        "household": {
            "members": ["person"],
        }
    },
    "families": {
        "family": {
            "members": ["person"],
        }
    },
    "axes": [
        [
            {
                "count": 100,
                "name": "w2_wages_from_qualified_business",
                "min": 0,
                "max": 200_000,
                "period": "2022",
            }
        ],
        [
            {
                "count": 100,
                "name": "self_employment_income",
                "min": 0,
                "max": 200_000,
                "period": "2022",
            }
        ],
    ],
}

simulation_builder = SimulationBuilder()
simulation = simulation_builder.build_from_entities(
    CountryTaxBenefitSystem(), WITH_AXES
)

import plotly.graph_objects as go

income = simulation.calculate("self_employment_income", 2022).reshape(100, 100)
w2_wages = simulation.calculate(
    "w2_wages_from_qualified_business", 2022
).reshape(100, 100)
qbid = simulation.calculate(
    "qualified_business_income_deduction", 2022
).reshape(100, 100)
# data is now a 100x100 array of self_employment_income values
# we plot a surface plot of the data

fig = go.Figure(data=go.Surface(x=income, y=w2_wages, z=qbid))
fig.update_layout(
    title="QBI deduction (z) by business income (x) and W2 wages (y)",
    width=800,
    height=600,
    xaxis_tickformat="$,.0f",
    yaxis_tickformat="$,.0f",
)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
[0;32m/tmp/ipykernel_2257/1948591072.py[0m in [0;36m<module>[0;34m[0m
[1;32m     50[0m [0msimulation_builder[0m [0;34m=[0m [0mSimulationBuilder[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     51[0m simulation = simulation_builder.build_from_entities(
[0;32m---> 52[0;31m     [0mCountryTaxBenefitSystem[0m[0;34m([0m[0;34m)[0m[0;34m,[0m [0mWITH_AXES[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     53[0m )
[1;32m     54[0m [0;34m[0m[0m

[0;32m/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/openfisca_core/simulations/simulation_builder.py[0m in [0;36mbuild_from_entities[0;34m(self, tax_benefit_system, input_dict)[0m
[1;32m    108[0m         [0;32mif[0m [0maxes[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    109[0m             [0mself[0m[0;34m.[0m[0maxes[0m [0;34m=[0m [0maxes[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 110[0;31m             [0mself[0m[0;34m.[0m[0mexpand_axes[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    111[0m [0;34m[0m[0m
[1;32m    112[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/openfisca_core/simulations/simulation_builder.py[0m in [0;36mexpand_axes[0;34m(self)[0m
[1;32m    487[0m             [0;31m# Adjust roles[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    488[0m             [0moriginal_roles[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mget_roles[0m[0;34m([0m[0mentity_name[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 489[0;31m             [0madjusted_roles[0m [0;34m=[0m [0moriginal_roles[0m [0;34m*[0m [0mcell_count[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    490[0m             [0mself[0m[0;34m.[0m[0maxes_roles[0m[0;34m[[0m[0mentity_name[0m[0;34m][0m [0;34m=[0m [0madjusted_roles[0m[0;34m[0m[0;34m[0m[0m
[1;32m    491[0m             [0;31m# Adjust memberships, for group entities only[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;31mTypeError[0m: unsupported operand type(s) for *: 'Role' and 'int'
TypeError: unsupported operand type(s) for *: 'Role' and 'int'

