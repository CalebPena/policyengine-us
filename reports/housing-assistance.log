Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/jupyter_cache/executors/utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/asyncio/base_events.py", line 587, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/nbclient/client.py", line 664, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
sim_emp.vary("employment_income", max=4_000 * 12, step=120)

import plotly.express as px

LABELS = dict(
    employment_income="Monthly employment income",
    dividend_income="Monthly dividend income",
    income="Monthly income",
    income_source="Income source",
    housing_cost="Monthly housing cost",
    housing_assistance="Monthly housing assistance",
    hap_mtr="Marginal tax rate from HAP",
    housing_assistance_mtr="Marginal tax rate from housing assistance",
    hap="Housing assistance payment (if eligible)",
)

emp_df_full = pd.DataFrame(
    dict(
        employment_income=sim_emp.calc("employment_income")[0] / 12,
        hap=sim_emp.calc("hud_hap")[0] / 12,
        housing_assistance=sim_emp.calc("housing_assistance")[0] / 12,
        hap_mtr=-sim_emp.deriv("hud_hap", "employment_income"),
        housing_assistance_mtr=-sim_emp.deriv(
            "housing_assistance", "employment_income"
        ),
    )
)

fig = px.line(
    emp_df_full,
    "employment_income",
    "housing_assistance",
    labels=LABELS,
    title="Housing assistance for a one-person household in California with $1,000 monthly housing costs",
)
fig.update_layout(xaxis_tickformat="$,", yaxis_tickformat="$,")
fig.show()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
[0;32m/tmp/ipykernel_2442/2961144486.py[0m in [0;36m<module>[0;34m[0m
[1;32m     35[0m )
[1;32m     36[0m [0mfig[0m[0;34m.[0m[0mupdate_layout[0m[0;34m([0m[0mxaxis_tickformat[0m[0;34m=[0m[0;34m"$,"[0m[0;34m,[0m [0myaxis_tickformat[0m[0;34m=[0m[0;34m"$,"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 37[0;31m [0mfig[0m[0;34m.[0m[0mshow[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m
[0;32m/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/plotly/basedatatypes.py[0m in [0;36mshow[0;34m(self, *args, **kwargs)[0m
[1;32m   3396[0m         [0;32mimport[0m [0mplotly[0m[0;34m.[0m[0mio[0m [0;32mas[0m [0mpio[0m[0;34m[0m[0;34m[0m[0m
[1;32m   3397[0m [0;34m[0m[0m
[0;32m-> 3398[0;31m         [0;32mreturn[0m [0mpio[0m[0;34m.[0m[0mshow[0m[0;34m([0m[0mself[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   3399[0m [0;34m[0m[0m
[1;32m   3400[0m     [0;32mdef[0m [0mto_json[0m[0;34m([0m[0mself[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/plotly/io/_renderers.py[0m in [0;36mshow[0;34m(fig, renderer, validate, **kwargs)[0m
[1;32m    395[0m         [0;32mif[0m [0;32mnot[0m [0mnbformat[0m [0;32mor[0m [0mLooseVersion[0m[0;34m([0m[0mnbformat[0m[0;34m.[0m[0m__version__[0m[0;34m)[0m [0;34m<[0m [0mLooseVersion[0m[0;34m([0m[0;34m"4.2.0"[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    396[0m             raise ValueError(
[0;32m--> 397[0;31m                 [0;34m"Mime type rendering requires nbformat>=4.2.0 but it is not installed"[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    398[0m             )
[1;32m    399[0m [0;34m[0m[0m

[0;31mValueError[0m: Mime type rendering requires nbformat>=4.2.0 but it is not installed
ValueError: Mime type rendering requires nbformat>=4.2.0 but it is not installed

